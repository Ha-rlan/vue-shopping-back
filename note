bug:access denied for user root@localhost
原因：application.properties 没删，里面有初始数据，系统默认使用properties 的数据
Cause: java.lang.IndexOutOfBoundsException: Index: 1, Size: 1]
查询数组越界：
解决办法是添加无参构造方法（为什么）

select 查询无法获得对应的参数：
没有设置别名

前后端数据传递异常：
没有引入qs库（想想为什么）

思考下登陆的那个bug

关于权限和角色的分配问题

邮箱验证思路：
点击事件发起请求，controller发送一个数字到对应的账户上，对方看到了之后填写验证，然后二者数据进行比对。
那么最重要的验证怎么去做：
思路一：在发送的同时插入到数据库当中，然后当客户点击注册时，另外的一个controller可以从数据库拿到这个
注册码进行验证匹配。
思路二：可以直接存到session中即addAttribute()当中，在需要的时候拿出来。貌似思路二更方便简洁而且节省资源
那么，is_active呢，注册如果对的话那么就更新这个字段！

关于邮箱验证传递code的技术问题
首先是跨域问题，总结来说就是缺什么给什么
然后code传递问题：
前端访问的时候默认不会记录跨域的cookie，导致cookie和session不对应所以传递有问题，所以需要开启cookie，而且开启需要
对应具体的网址，不能是*不然会报错

数据查询分析:
结构层次很清晰，关键在于怎么去实现这个查询，（就是一个表还夹着另外一个表的数据，而且，这个数据是它的一个子集，child）
以及返回的meta status 还有msg

问题：如何去快速且准确的匹配到这个父id和子id ，遍历没的说。肯定是需要遍历的，遍历之后呢？获取到匹配到的集合，然后赋给父集合的子集合。而一切，又是围绕着all这个集合的。

关于权限管理：这边很明显是需要一个权限管理字段的，加一个id又显得多余直接根据role_name来筛查没什么区别，可如此一来我还要role的id作什么用呢？
结论：加一个role_id来进行筛查

分页：这边返回的数据是total,pagenum,pagesize。
思路一：自然是新建一个对象，将查询到的集合作为数组传入即可
思路二：

前端发送数据若为json格式，那么接受数据的必须加上@RequestBody注解

更新用户信息的事务报错：
Data truncation: Truncated incorrect DOUBLE value: 'asdf@qq.com'
sql语句里把逗号写成and了，所以发生错误

Column 'ps_id' in field list is ambiguous
主键命令冲突，确定好是哪个就可以了

权限列表业务逻辑分层：
第一层是角色名，第二层对应着具体的权限（算法可以直接调用之前的），第三层对应着具体的操作

后端数据列表和树形有什么区别

数据库部分知识太薄弱以及mybatis 和 mybatis-plus